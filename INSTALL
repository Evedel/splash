To compile SPLASH v2.x you will need simply:

- A Fortran 90/95/2003 compiler (e.g. gfortran)
- X-Windows
- cairo

(As SPLASH is command-line driven, it is also
 assumed you have a basic knowledge of unix).

The basic steps for installation are:
1) make sure you have a Fortran 90/95 compiler (such as gfortran).
2) make sure you have libcairo on your system
3) compile SPLASH and link with cairo.
4) if desired/necessary write a read_data subroutine so that SPLASH can read
   your data format.
5) make pretty pictures.

As a first attempt, with gfortran as your Fortran compiler, just try

"make SYSTEM=gfortran"

and this may "just work". If not, read on...

For troubleshooting of some common installation problems,
 have a look at the online FAQ.
 
1) ---------------- Fortran 9x/2003 compilers ---------------------------

 By now, many Fortran 90/95 compilers exist. In terms of free ones, both Intel
and Sun have non-commercial versions available for Linux.

Gfortran is the free GNU compiler, as of version 4.3.0, can be used to compile SPLASH.
The latest version can be downloaded from:

http://gcc.gnu.org/wiki/GFortran

I strongly recommend downloading a more recent version of gfortran rather than
relying on any pre-installed version (use gfortran -v to check the version number).
In particular versions 4.2.0 and lower *do not* compile SPLASH2. Later versions also
have openMP, so you can compile and run SPLASH in parallel.

2) ----------------- The Cairo Graphics Library --------------------
 Cairo is a low-level system library used in many applications. Thus it is highly
likely that you already have a copy on your system and already in your library path.
Look for a file called libcairo, e.g. using

"locate libcairo"

or have a look in the usual places (e.g. /usr/lib/, /usr/X11/lib). If not, you
can download a copy of cairo (and pixman, which it depends on) from:

http://cairographics.org/releases/

For example, using the wget utility to download these:
wget http://cairographics.org/releases/pixman-0.22.2.tar.gz
wget http://cairographics.org/releases/cairo-1.10.0.tar.gz

...then follow the instructions to compile pixman and in turn cairo. To install in
your home directory (i.e. without superuser permissions), use (for both pixman and cairo):

./configure --prefix=/home/me/dir/
make
make install

where /home/me/dir is the location you want to install cairo and pixman to. If you
install libraries to such a location, set your LD_LIBARY_PATH to point to this.

e.g. add the following lines to your .profile (or equivalent if using csh instead of bash)
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/me/dir/lib

or, for Mac OS/X, use:
export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/home/me/dir/lib

3) ----------------- Compiling SPLASH ----------------

With cairo and a Fortran compiler in place, preset options for the most common Fortran
compilers are given in the Makefile provided the variable SYSTEM is set appropriately
(either on the command line or as an environment variable). On the command line, type

"make SYSTEM=xxx"

Where the SYSTEM corresponds to one of those listed in the Makefile, some of the most
commonly used of which are:

gfortran -- settings for the gfortran/gcc compilers
g95 -- settings for the g95/gcc compilers
nagf95 -- settings for the NAG f95 compiler
sunf95 -- settings for the Sun f95 compiler
ifort -- settings for the Intel Fortran/C Compilers
pgf90 -- settings for the Portland Group Fortran 90 compiler

--- linking against locally installed cairo ----
If you have installed cairo locally, you will need to specify the include path locally, i.e.:

export C_INCLUDE_PATH=$C_INCLUDE_PATH:/home/me/dir/include

4) -------------- reading your data format -------------------

The basic "splash" binary is quite general and will read any data where columns 
correspond to different quantities and rows correspond to each particle (actually
I use splash to plot graphs for nearly all data in this form, whether SPH or not)
-- it will also sensibly skip header lines which do not have the same number of columns.

However, it is ultimately desirable to use SPLASH to directly visualise the
(binary) output of your code. If you are using a widely used SPH code (e.g. GADGET,
GASOLINE, VINE, DRAGON), it is reasonably  likely that I have already written a 
read data subroutine which will read your dumps. If your format is not amongst those 
distributed, then BEFORE you start writing your own routine, please consider whether 
or not a routine to read your format would be of more general use (e.g. to other users
of your code). If so, PLEASE email me to request a new read_data routine for your 
format, by sending an email attaching:
a) an example dump 
and
b) the source code from the routine which wrote the dump file.

Then I can write a read for your format that can be added to the SPLASH repository
and distributed in all future versions. Whilst I aim never to change the interface
to the read_data routines, it is not impossible that some changes may occur
somewhere down the line (or enhanced functionality -- for example the more advanced
data reads are able to read only the required columns for a given plot from the
file, rather than the whole file).

If you *really* want to hack one yourself it is best to look at some of the
other examples and change the  necessary parts to suit your data files. Note
that reading directly from unformatted data files is *much* faster than reading
from formatted (ascii) output. Just to get started you can use the
read_data_ascii.f90 which reads from ascii files, but this will not enable the
full rendering capabilities until you specify the location of the density, h and
particle mass in the arrays (via the parameters ih, irho and ipmass in the
set_labels subroutine which is part of the read_data file). 

If you do end up writing your own, again, please email me the end result so I
can add it to the officially supported data reads. This also makes it much
easier for you to upgrade to newer versions as you do not require a locally
customised version.

5) ----- running splash/ making pretty pictures

For detailed help on how to use SPLASH, refer to the (quite extensive) userguide
on the splash web page.

Have fun! And remember, if you get stuck you can always email me... 
(it doesn't hurt).

Daniel Price
daniel.price@monash.edu
