To compile SPLASH you will need the following on your system, both of which
are freely available:
- The PGPLOT graphics subroutine library
- A Fortran 95 compiler

The basic steps for installation are:
1) make sure you have a Fortran 90/95 compiler (such as gfortran).
2) make sure you have the PGPLOT libraries installed.
3) compile SPLASH and link with PGPLOT.
4) if desired/necessary write a read_data subroutine so that SPLASH can read
   your data format.
5) make pretty pictures.

For troubleshooting of some common installation problems,
 have a look at the online FAQ.

All of the above steps can be done "by hand" - to do so follow the detailed
instructions in the INSTALL file. However on Mac OS/X you can use either the Macports 
or Fink package managers (download either from the web as a simple disk image file)
to make things easier. As of OS/X 10.6 I recommend Macports over Fink.

1-3) -------- getting a Fortran compiler, installing PGPLOT, compiling splash -------------

Using Macports (recommended):
-----------------------------
export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/opt/local/lib  (also put this in your ~/.profile)
sudo port -v install pgplot
export PGPLOT_DIR=/opt/local/lib

(It is also a good idea at this stage to add the setting of PGPLOT_DIR into your 
 .profile/.bashrc or .tcshrc file along with a setting for PGPLOT_DEV (e.g. to "/xw"
 which sets the default device to be the X-windows device).

Then compile splash as follows:
make SYSTEM=gfortran

Using Fink:
-----------
export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/sw/lib  (and make sure this is in your ~/.profile) 
fink install pgplot  (or do this using the Fink commander GUI)

(For Fink, if pgplot does not appear in the package list, you may need
 to turn on "Use unstable packages" in the fink preferences. If you do not
 have g77/gfortran installing PGPLOT will trigger this install also (and maybe
 also the libpng libraries). 
 
export PGPLOT_DIR=/sw/lib/pgplot

(It is also a good idea at this stage to add the setting of PGPLOT_DIR into your 
 .profile/.bashrc or .tcshrc file along with a setting for PGPLOT_DEV (e.g. to "/xw"
 which sets the default device to be the X-windows device).

Then compile splash using one of the following:
make SYSTEM=gfortran_osx  (OS/X 10.5 with pgplot installed via Fink using gfortran)
make SYSTEM=intelmac  (OS/X 10.4 with pgplot installed via Fink using gfortran)
make SYSTEM=mymac     (settings for a Mac G4 with pgplot installed with Fink+g95) 

If none of these work, try just
make SYSTEM=gfortran
make SYSTEM=g95
and adjust the linker flags by hand (e.g. make SYSTEM=g95 LDFLAGS="-L/sw/lib/pgplot -lpgplot")

Other
-----
Step-by-step instructions for installing PGPLOT manually are given in the INSTALL file.
The only requirement is a working Fortran compiler.

4) -------------- reading your data format -------------------

The final step is to get SPLASH to read the dump files from your SPH code
directly. If you are using a widely used SPH code (e.g. GADGET, GASOLINE, VINE,
DRAGON), it is reasonably  likely that I have already written a read data
subroutine which will read your dumps. Alternatively, the ascii read ('asplash')
is quite general and will read any data where columns correspond to different
quantities and rows correspond to each particle (actually I use asplash to plot
graphs for nearly all data in this form, whether SPH or not) -- it will also
sensibly skip header lines which do not have the same number of columns.

However, it is ultimately desirable to use SPLASH to directly visualise the
output of your code If your format is not amongst those distributed, then BEFORE
you start writing your own routine, please consider whether or not a routine to read
your format would be of more general use (e.g. to other users of your code). If
so, PLEASE email me to request a new read_data routine for your format, by
sending an email attaching:
a) an example dump 
and 
b) the source code from the routine which wrote the dump file.

Then I can write a read for your format that can be added to the SPLASH repository
and distributed in all future versions. Whilst I aim never to change the interface
to the read_data routines, it is not impossible that some changes may occur
somewhere down the line (or enhanced functionality -- for example the more advanced
data reads are able to read only the required columns for a given plot from the
file, rather than the whole file).

If you *really* want to hack one yourself it is best to look at some of the
other examples and change the  necessary parts to suit your data files. Note
that reading directly from unformatted data files is *much* faster than reading
from formatted (ascii) output. Just to get started you can use the
read_data_ascii.f90 which reads from ascii files, but this will not enable the
full rendering capabilities until you specify the location of the density, h and
particle mass in the arrays (via the parameters ih, irho and ipmass in the
set_labels subroutine which is part of the read_data file). 

If you do end up writing your own, again, please email me the end result so I
can add it to the officially supported data reads. This also makes it much
easier for you to upgrade to newer versions as you do not require a locally
customised version.

5) ----- running splash/ making pretty pictures -----

For detailed help on how to use SPLASH, refer to the (quite extensive) userguide
in the /docs directory or on the splash web page.

Have fun! And remember, if you get stuck you can always email me... 
(it doesn't hurt).

Daniel Price
daniel.price@monash.edu
